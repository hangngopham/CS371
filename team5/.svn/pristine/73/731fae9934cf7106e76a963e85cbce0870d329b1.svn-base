<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_51) on Thu Oct 13 14:34:07 MDT 2016 -->
<title>Budget</title>
<meta name="date" content="2016-10-13">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="Budget";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../budget/package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Budget.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev&nbsp;Class</li>
<li><a href="../budget/BudgetTableModel.html" title="class in budget"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?budget/Budget.html" target="_top">Frames</a></li>
<li><a href="Budget.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">budget</div>
<h2 title="Class Budget" class="title">Class Budget</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>budget.Budget</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="typeNameLabel">Budget</span>
extends java.lang.Object</pre>
<div class="block">This Object houses all the data members and functions that a budget needs to be functional and useful.</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../budget/Budget.html#Budget--">Budget</a></span>()</code>
<div class="block">Default constructor: Does basic setup functionality to a default setting.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../budget/Budget.html#addExpense-java.lang.String-">addExpense</a></span>(java.lang.String&nbsp;n)</code>
<div class="block">Add a Category named with the input String n to the expenseCategories ArrayDeque.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../budget/Budget.html#addIncome-java.lang.String-">addIncome</a></span>(java.lang.String&nbsp;n)</code>
<div class="block">Add a Category named with the input String n to the incomeCategories ArrayDeque.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>java.lang.Object[]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../budget/Budget.html#categoryNames--">categoryNames</a></span>()</code>
<div class="block">This function builds an Object array based on the current state of the Budget.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../budget/Budget.html#changedData--">changedData</a></span>()</code>
<div class="block">This function is multi-step.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../budget/Budget.html#changeRowEstimate-int-int-double-">changeRowEstimate</a></span>(int&nbsp;category,
                 int&nbsp;row,
                 double&nbsp;e)</code>&nbsp;</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../budget/Budget.html#clone-budget.Budget-">clone</a></span>(<a href="../budget/Budget.html" title="class in budget">Budget</a>&nbsp;n)</code>
<div class="block">Dumps the old budget values and copies to another budget.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code><a href="../budget/Category.html" title="class in budget">Category</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../budget/Budget.html#getCategoryIndex-int-">getCategoryIndex</a></span>(int&nbsp;target)</code>
<div class="block">Given a target index from a JList of the format {"Budget", [Titles from all income Categories], [Titles from all expense Categories]},
 This function will return the Category from the correct ArrayDeque.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code><a href="../budget/BudgetTableModel.html" title="class in budget">BudgetTableModel</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../budget/Budget.html#getModel--">getModel</a></span>()</code>
<div class="block">This function returns the model outlining the budget for a table object.</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../budget/Budget.html#getName--">getName</a></span>()</code>
<div class="block">Returns a String.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../budget/Budget.html#removeCategory-int-">removeCategory</a></span>(int&nbsp;i)</code>
<div class="block">Remove a Category object the Budget object and remove it from the table the index i comes in from a JList index
 Formatted {"Budget", [Titles of all incomeCategories], [Titles of all expenseCategories]}.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../budget/Budget.html#setName-java.lang.String-">setName</a></span>(java.lang.String&nbsp;n)</code>
<div class="block">This function sets the name of the budget.</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../budget/Budget.html#setupModel--">setupModel</a></span>()</code>
<div class="block">Blank setup for a BudgetTableModel.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="Budget--">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Budget</h4>
<pre>public&nbsp;Budget()</pre>
<div class="block">Default constructor: Does basic setup functionality to a default setting.</div>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="getName--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getName</h4>
<pre>public&nbsp;java.lang.String&nbsp;getName()</pre>
<div class="block">Returns a String.  This is a public method because the user will see the name of the budget.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The name of the budget.</dd>
</dl>
</li>
</ul>
<a name="getModel--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getModel</h4>
<pre>public&nbsp;<a href="../budget/BudgetTableModel.html" title="class in budget">BudgetTableModel</a>&nbsp;getModel()</pre>
<div class="block">This function returns the model outlining the budget for a table object.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The model that represents this Budget object.</dd>
</dl>
</li>
</ul>
<a name="setName-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setName</h4>
<pre>public&nbsp;void&nbsp;setName(java.lang.String&nbsp;n)</pre>
<div class="block">This function sets the name of the budget.  The argument is taken and modified to match style "name"'s budget - creation date.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>n</code> - The user specified portion of the budget name.</dd>
</dl>
</li>
</ul>
<a name="setupModel--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setupModel</h4>
<pre>public&nbsp;void&nbsp;setupModel()</pre>
<div class="block">Blank setup for a BudgetTableModel.</div>
</li>
</ul>
<a name="addIncome-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addIncome</h4>
<pre>public&nbsp;void&nbsp;addIncome(java.lang.String&nbsp;n)</pre>
<div class="block">Add a Category named with the input String n to the incomeCategories ArrayDeque.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>n</code> - The name of the new Category to add to the ArrayDeque.</dd>
</dl>
</li>
</ul>
<a name="addExpense-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addExpense</h4>
<pre>public&nbsp;void&nbsp;addExpense(java.lang.String&nbsp;n)</pre>
<div class="block">Add a Category named with the input String n to the expenseCategories ArrayDeque.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>n</code> - The name of the new Category to add to the ArrayDeque.</dd>
</dl>
</li>
</ul>
<a name="removeCategory-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>removeCategory</h4>
<pre>public&nbsp;void&nbsp;removeCategory(int&nbsp;i)</pre>
<div class="block">Remove a Category object the Budget object and remove it from the table the index i comes in from a JList index
 Formatted {"Budget", [Titles of all incomeCategories], [Titles of all expenseCategories]}.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>i</code> - the index i comes in from a JList index formatted {"Budget", [Titles of all incomeCategories], [Titles of all expenseCategories]}
 by the function getCategories.</dd>
</dl>
</li>
</ul>
<a name="clone-budget.Budget-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>clone</h4>
<pre>public&nbsp;void&nbsp;clone(<a href="../budget/Budget.html" title="class in budget">Budget</a>&nbsp;n)</pre>
<div class="block">Dumps the old budget values and copies to another budget.  This is a very dirty method. 
 !!Change this so that maybe we aren't passing Budget's around outside this class!!</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>n</code> - a Budget object to clone to.</dd>
</dl>
</li>
</ul>
<a name="categoryNames--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>categoryNames</h4>
<pre>public&nbsp;java.lang.Object[]&nbsp;categoryNames()</pre>
<div class="block">This function builds an Object array based on the current state of the Budget.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>an object array filled such that: {"Budget", [Titles from all income Categories], [Titles from all expense Categories]}</dd>
</dl>
</li>
</ul>
<a name="getCategoryIndex-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCategoryIndex</h4>
<pre>public&nbsp;<a href="../budget/Category.html" title="class in budget">Category</a>&nbsp;getCategoryIndex(int&nbsp;target)</pre>
<div class="block">Given a target index from a JList of the format {"Budget", [Titles from all income Categories], [Titles from all expense Categories]},
 This function will return the Category from the correct ArrayDeque.
 !!This function should be private to reduce coupling potential.!!</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>target</code> - This integer is the target index from an array of Objects that corresponds to a specific Category.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The Category specified by the target index.</dd>
</dl>
</li>
</ul>
<a name="changedData--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>changedData</h4>
<pre>public&nbsp;void&nbsp;changedData()</pre>
<div class="block">This function is multi-step.  The first action it performs is to go through each Category and tell it to update it's table,
 it then updates it's own table based on these updates.</div>
</li>
</ul>
<a name="changeRowEstimate-int-int-double-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>changeRowEstimate</h4>
<pre>public&nbsp;void&nbsp;changeRowEstimate(int&nbsp;category,
                              int&nbsp;row,
                              double&nbsp;e)</pre>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../budget/package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Budget.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev&nbsp;Class</li>
<li><a href="../budget/BudgetTableModel.html" title="class in budget"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?budget/Budget.html" target="_top">Frames</a></li>
<li><a href="Budget.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
