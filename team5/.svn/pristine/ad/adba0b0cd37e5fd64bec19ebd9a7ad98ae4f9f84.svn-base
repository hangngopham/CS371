package budget;

import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayDeque;

import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSplitPane;
import javax.swing.JTable;
import javax.swing.border.EmptyBorder;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

public class GuiMain extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = -205935214689282413L;
	private JPanel contentPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					GuiMain frame = new GuiMain();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public GuiMain() {
		//Set up the Budget
		Budget main = new Budget();
		
		//All frames
		JSplitPane splitPane = new JSplitPane();
		splitPane.setResizeWeight(.40);
		String suggestListData[] = {"Rent", "Groceries"};//Change this to read in from a file. !!Place this list in a scroll frame if it's dynamic!
		JList<String> list = new JList<String>(suggestListData);
		//model is contained in the Budget main.
		JTable table = new JTable(main.getModel());
		JScrollPane scrollPane = new JScrollPane(table);
		
		//Build the list listener
		ListSelectionListener sel = new ListSelectionListener() {
			public void valueChanged(ListSelectionEvent e) {
				if(e.getValueIsAdjusting() == false) {
					main.addExpense();//Change to value function!!!
				}//End if.
				//or do nothing.
			}//End valueChanged.
		};
		list.addListSelectionListener(sel);
		
		//Build the window
		this.setTitle("Budget Manager");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(50, 50, 900, 800);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(new BorderLayout(0, 0));
		contentPane.add(splitPane, BorderLayout.CENTER);
		splitPane.setLeftComponent(list);
		splitPane.setRightComponent(scrollPane);
		
		//Setup the menu system
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu mnNewMenu = new JMenu("File");
		menuBar.add(mnNewMenu);
		
		JMenuItem mntmNewMenuItem = new JMenuItem("New Budget");
		mntmNewMenuItem.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				System.out.println("HelloWorld!");
			}
		});
		mnNewMenu.add(mntmNewMenuItem);
		
		JMenuItem mntmNewMenuItem_1 = new JMenuItem("Save Budget");
		//mnNewMenu.add(mntmNewMenuItem_1);
		
		JMenuItem mntmNewMenuItem_2 = new JMenuItem("Load Budget");
		//mnNewMenu.add(mntmNewMenuItem_2);
		
		JMenuItem mntmNewMenuItem_3 = new JMenuItem("Exit");
		mntmNewMenuItem_3.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				System.exit(0);
			}
		});
		mnNewMenu.add(mntmNewMenuItem_3);
		
		JMenu mnNewMenu_1 = new JMenu("Add");
		menuBar.add(mnNewMenu_1);
		
		JMenuItem mntmCategoryMenuItem = new JMenuItem("Income Category");
		mnNewMenu_1.add(mntmCategoryMenuItem);
		mntmCategoryMenuItem.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				main.addIncome();
			}
		});
		
		JMenuItem mntmAddMenuItem = new JMenuItem("Expense Category");
		mnNewMenu_1.add(mntmAddMenuItem);
		mntmAddMenuItem.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				main.addExpense();
			}
		});
		
		JMenuItem mntmTransactionem = new JMenuItem("Transaction");
		//mnNewMenu_1.add(mntmTransactionem);
	}
}
